<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:p="http://www.springframework.org/schema/p" 
	xmlns:jpa="http://www.springframework.org/schema/data/jpa"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:batch="http://www.springframework.org/schema/batch"
	xmlns:mongo="http://www.springframework.org/schema/data/mongo"
	xsi:schemaLocation="http://www.springframework.org/schema/beans  
                        http://www.springframework.org/schema/beans/spring-beans.xsd 
                        http://www.springframework.org/schema/context 
                        http://www.springframework.org/schema/context/spring-context.xsd
                        http://www.springframework.org/schema/data/mongo
                        http://www.springframework.org/schema/data/mongo/spring-mongo.xsd
                        http://www.springframework.org/schema/batch
                        http://www.springframework.org/schema/batch/spring-batch-3.0.xsd">


	<mongo:mongo host="127.0.0.1" id="system">
		<!-- <mongo:options connections-per-host="150" threads-allowed-to-block-for-connection-multiplier="1500" 
			connect-timeout="15000" auto-connect-retry="true" socket-timeout="60000" 
			write-number="1" write-fsync="true" /> -->
		<mongo:options connections-per-host="3000"
			threads-allowed-to-block-for-connection-multiplier="3"
			connect-timeout="10000" max-wait-time="30000" auto-connect-retry="true"
			socket-keep-alive="true" socket-timeout="1500" slave-ok="true"
			write-number="1" write-timeout="0" write-fsync="true" />
	</mongo:mongo>

	<mongo:db-factory id="systemMongoDbFactory" dbname="batch"
		mongo-ref="system" />

	<bean id="systemMongoTemplate" class="org.springframework.data.mongodb.core.MongoTemplate">
		<constructor-arg name="mongoDbFactory" ref="systemMongoDbFactory" />
	</bean>

	<bean id="jobRepository"
		class="br.com.javatar.batch.MongoDbJobRepositoryFactoryBean"
		p:mongoTemplate-ref="systemMongoTemplate" />


	<bean id="jobLauncher"
		class="org.springframework.batch.core.launch.support.SimpleJobLauncher">
		<property name="jobRepository" ref="jobRepository" />
	</bean>
     
     <bean id="writer" class="br.com.javatar.batch.AccountItemWriter"/>  
     
     <bean id="transactionManager" class="org.springframework.integration.transaction.PseudoTransactionManager"/>
	
	 <batch:job id="importAccountData">       
           <batch:step id="parseAndLoadAccountData">  
                <batch:tasklet >  
                     <batch:chunk reader="reader" writer="writer" commit-interval="3" skip-limit="2">  
                          <batch:skippable-exception-classes>  
                               <batch:include class="org.springframework.batch.item.file.FlatFileParseException" />  
                          </batch:skippable-exception-classes>  
                     </batch:chunk>  
                </batch:tasklet>                 
           </batch:step>  
      </batch:job>  
      
      <bean id="reader" class="org.springframework.batch.item.file.FlatFileItemReader" scope="step">  
           <property name="resource" value="file:#{jobParameters['inputResource']}" />  
           <property name="linesToSkip" value="1" />  
           <property name="lineMapper">  
                <bean class="org.springframework.batch.item.file.mapping.DefaultLineMapper">  
                     <property name="lineTokenizer">  
                          <bean class="org.springframework.batch.item.file.transform.DelimitedLineTokenizer">  
                               <property name="names" value="ACCOUNT_ID,ACCOUNT_HOLDER_NAME,ACCOUNT_CURRENCY,BALANCE" />  
                               <property name="delimiter" value="," />  
                          </bean>  
                     </property>  
                     <property name="fieldSetMapper">  
                          <bean class="br.com.javatar.batch.AccountFieldSetMapper" />  
                     </property>  
                </bean>  
           </property>  
      </bean>  
        
</beans>